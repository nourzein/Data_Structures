{"changed":true,"filter":false,"title":"data_geolocation.js","tooltip":"/week07/data_geolocation.js","value":"var request = require('request'); // npm install request\nvar async = require('async'); // npm install async\nvar fs = require('fs');\nconst dotenv = require('dotenv'); // npm install dotenv\n\n// TAMU api key\ndotenv.config();\nconst apiKey = process.env.API_KEY;\n\n\n// geocode addresses\nvar meetingsData = [];\nvar addresses = require(\"./results06.json\");\n// console.log(addresses[0].address); \n\n// var geoAddress= addresses.map(elem => {\n//     return elem.address\n//      })\n\n\n//eachSeries in the async module iterates over an array and operates on each item in the array in series\n\nasync.eachSeries(\n  addresses,\n  function(value, callback) {\n    var apiRequest = 'https://geoservices.tamu.edu/Services/Geocode/WebService/GeocoderWebServiceHttpNonParsed_V04_01.aspx?';\n        apiRequest += 'streetAddress=' + value.address.split(' ').join('%20');\n        apiRequest += '&city=New%20York&state=NY&apikey=' + apiKey;\n        apiRequest += '&format=json&version=4.01';\n        \n    request(apiRequest, function(err, resp, body) {\n        if (err) {throw err;}\n        else {\n            var tamuGeo = JSON.parse(body);\n            // console.log(tamuGeo);\n           value.latitude= +tamuGeo[\"OutputGeocodes\"][0][\"OutputGeocode\"][\"Latitude\"];\n           value.longitude= +tamuGeo[\"OutputGeocodes\"][0][\"OutputGeocode\"][\"Longitude\"];\n           \n    //         // meetingsData.push({streetAddress: tamuGeo[\"InputAddress\"][\"StreetAddress\"], City: tamuGeo[\"InputAddress\"][\"City\"], Geocode: { Latitude: tamuGeo[\"OutputGeocodes\"][0][\"OutputGeocode\"][\"Latitude\"], Longitude: tamuGeo[\"OutputGeocodes\"][0][\"OutputGeocode\"][\"Longitude\"]}});\n        //.push({Latitude: tamuGeo[\"OutputGeocodes\"][0][\"OutputGeocode\"][\"Latitude\"], Longitude: tamuGeo[\"OutputGeocodes\"][0][\"OutputGeocode\"][\"Longitude\"]});\n    //          })\n        }\n        console.log(value.latitude, value.longitude)\n    });\n    \nsetTimeout(callback, 2000);\n}, \n\n\nfunction() {\n    fs.writeFileSync('geolocationResults06.json', JSON.stringify(addresses, null, 2));\n    console.log('*** *** *** *** ***'); // simply to see theoutput well\n    console.log('Number of meetings in this zone: ');\n    console.log(addresses.length); // see how many meetings were done\n}\n);\n \n ","undoManager":{"mark":-2,"position":1,"stack":[[{"start":{"row":19,"column":0},"end":{"row":19,"column":18},"action":"remove","lines":["var geocodeData=[]"],"id":1},{"start":{"row":18,"column":0},"end":{"row":19,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":17,"column":10},"end":{"row":18,"column":0},"action":"remove","lines":["",""],"id":2}]]},"ace":{"folds":[],"scrolltop":441,"scrollleft":0,"selection":{"start":{"row":12,"column":16},"end":{"row":12,"column":23},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":20,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1571102652692}